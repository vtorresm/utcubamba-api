"""Update User model with additional fields

Revision ID: 71b901b0f0a2
Revises: be4dfdb38dfb
Create Date: 2025-05-19 16:43:47.336234

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '71b901b0f0a2'
down_revision: Union[str, None] = 'be4dfdb38dfb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Primero crear el tipo de enumeración
    userstatus_enum = sa.Enum('ACTIVO', 'DADO_DE_BAJA', name='userstatus')
    userstatus_enum.create(op.get_bind(), checkfirst=True)
    
    # Agregar las columnas como nullable
    op.add_column('users', sa.Column('nombre', sa.String(length=100), nullable=True))
    op.add_column('users', sa.Column('cargo', sa.String(length=100), nullable=True))
    op.add_column('users', sa.Column('departamento', sa.String(length=100), nullable=True))
    op.add_column('users', sa.Column('contacto', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('fecha_ingreso', sa.Date(), nullable=True))
    op.add_column('users', sa.Column('estado', userstatus_enum, nullable=True))
    
    # Actualizar los registros existentes con valores por defecto
    op.execute("""
        UPDATE users SET 
            nombre = 'Usuario ' || id,
            cargo = 'Sin especificar',
            departamento = 'Sin departamento',
            fecha_ingreso = CURRENT_DATE,
            estado = 'ACTIVO';
    """)
    
    # Ahora hacer las columnas NOT NULL
    op.alter_column('users', 'nombre', nullable=False, existing_type=sa.String(length=100))
    op.alter_column('users', 'cargo', nullable=False, existing_type=sa.String(length=100))
    op.alter_column('users', 'departamento', nullable=False, existing_type=sa.String(length=100))
    op.alter_column('users', 'fecha_ingreso', nullable=False, existing_type=sa.Date())
    op.alter_column('users', 'estado', nullable=False, existing_type=userstatus_enum)
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    
    # Eliminar las columnas
    op.drop_column('users', 'estado')
    op.drop_column('users', 'fecha_ingreso')
    op.drop_column('users', 'contacto')
    op.drop_column('users', 'departamento')
    op.drop_column('users', 'cargo')
    op.drop_column('users', 'nombre')
    
    # Eliminar el tipo de enumeración
    userstatus_enum = sa.Enum(name='userstatus')
    userstatus_enum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
