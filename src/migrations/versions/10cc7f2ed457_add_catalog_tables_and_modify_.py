"""Add catalog tables and modify medicamentos

Revision ID: 10cc7f2ed457
Revises: 10ee9aaf53d5
Create Date: 2025-05-07 21:07:54.143966

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '10cc7f2ed457'
down_revision: Union[str, None] = '10ee9aaf53d5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categorias',
    sa.Column('categoria_id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('categoria_id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_index(op.f('ix_categorias_categoria_id'), 'categorias', ['categoria_id'], unique=False)
    op.create_table('condiciones',
    sa.Column('condicion_id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('condicion_id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_index(op.f('ix_condiciones_condicion_id'), 'condiciones', ['condicion_id'], unique=False)
    op.create_table('tipos_toma',
    sa.Column('tipo_toma_id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('tipo_toma_id'),
    sa.UniqueConstraint('nombre')
    )
    op.create_index(op.f('ix_tipos_toma_tipo_toma_id'), 'tipos_toma', ['tipo_toma_id'], unique=False)
    op.create_table('medicamentos',
    sa.Column('medicamento_id', sa.Integer(), nullable=False),
    sa.Column('nombre_comercial', sa.String(length=100), nullable=False),
    sa.Column('nombre_generico', sa.String(length=100), nullable=True),
    sa.Column('presentacion', sa.String(length=100), nullable=True),
    sa.Column('concentracion', sa.String(length=50), nullable=True),
    sa.Column('laboratorio', sa.String(length=100), nullable=True),
    sa.Column('precio_unitario', sa.Float(), nullable=False),
    sa.Column('stock_actual', sa.Integer(), nullable=False),
    sa.Column('fecha_vencimiento', sa.Date(), nullable=True),
    sa.Column('codigo_barras', sa.String(length=50), nullable=True),
    sa.Column('requiere_receta', sa.Boolean(), nullable=True),
    sa.Column('unidad_empaque', sa.Integer(), nullable=True),
    sa.Column('via_administracion', sa.String(length=50), nullable=True),
    sa.Column('disponibilidad', sa.String(length=20), nullable=False),
    sa.Column('categoria_id', sa.Integer(), nullable=False),
    sa.Column('condicion_id', sa.Integer(), nullable=False),
    sa.Column('tipo_toma_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['categoria_id'], ['categorias.categoria_id'], ),
    sa.ForeignKeyConstraint(['condicion_id'], ['condiciones.condicion_id'], ),
    sa.ForeignKeyConstraint(['tipo_toma_id'], ['tipos_toma.tipo_toma_id'], ),
    sa.PrimaryKeyConstraint('medicamento_id'),
    sa.UniqueConstraint('codigo_barras')
    )
    op.create_index(op.f('ix_medicamentos_medicamento_id'), 'medicamentos', ['medicamento_id'], unique=False)
    op.drop_table('refresh_tokens')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('role', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('refresh_tokens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('token', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='refresh_tokens_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='refresh_tokens_pkey')
    )
    op.drop_index(op.f('ix_medicamentos_medicamento_id'), table_name='medicamentos')
    op.drop_table('medicamentos')
    op.drop_index(op.f('ix_tipos_toma_tipo_toma_id'), table_name='tipos_toma')
    op.drop_table('tipos_toma')
    op.drop_index(op.f('ix_condiciones_condicion_id'), table_name='condiciones')
    op.drop_table('condiciones')
    op.drop_index(op.f('ix_categorias_categoria_id'), table_name='categorias')
    op.drop_table('categorias')
    # ### end Alembic commands ###
